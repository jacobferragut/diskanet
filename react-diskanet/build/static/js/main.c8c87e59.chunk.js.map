{"version":3,"sources":["Components/components.js","Site.js","apiurl.js","Discover.js","Register.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["BoxPanel","styled","div","ResultPanel","ResultButton","button","NavBar","renderRedirect","state","redirect","to","gotoHome","bind","gotoSite","gotoAProfile","gotoDiscover","event","this","setState","props","user_id","redirectTo","Container","Row","Col","Component","SitePanel","siteInfo","background_color","length","SiteBox","visitSite","changeSite","deleteSite","site_id","render","concat","target","value","url","name","window","confirm","axios","delete","headers","jwt","then","response","alert","location","reload","catch","error","console","log","data","sid","uid","results","sites","Object","keys","siteId","userId","owner_id","push","key","includes","renderHTML","page","onClick","editHandler","SiteCreation0","handleEditorChange","content","editor","body","isEditing","get","editedSite","genre_art","genre_film","genre_music","genre_writing","callEdit","createSite","changeColor","changeCheckbox","editSite","handleEditorInit","e","getBody","style","backgroundColor","match","params","put","APIURL","newSite","post","checked","onChange","type","id","apiKey","init","height","menubar","plugins","toolbar","onInit","onEditorChange","SiteScreen0","site","title","ret","toString","showEdit","showDelete","SiteCreation","withRouter","SiteScreen","FilterButton","FilterPanel","DiscoverScreen","updateFilter","submitSearch","updateMayContain","document","getElementsByName","mayName","substring","genre","payload","RegisterScreen","username","password","pass_or_text","email","textType","updateUsername","updatePassword","updateShowPassword","updateEmail","goRegister","UserInformation","userInfo","selectedFile","imageURL","handleUploadImage","ev","preventDefault","FormData","append","uploadInput","files","res","err","warn","userStuff","src","alt","onSubmit","ref","Profile","App","loginToken","login","cookies","Cookies","set","path","expires","Date","now","Promise","reject","className","exact","Banner","callLogin","gotoRegister","isLoggedIn","checkLogin","logout","remove","setInterval","fluid","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c8c87e59.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\n//import { withRouter } from \"react-router\";\r\n\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst BoxPanel = styled.div`\r\n    font-size: 30px;\r\n    background-color: #444;\r\n    color: #fff;\r\n    border-radius: 0px;\r\n    padding: 20px;\r\n    margin: 10px;\r\n`;\r\n\r\nconst ResultPanel = styled(BoxPanel)`\r\n    color: #000;\r\n    background-color: tomato;\r\n`;\r\n\r\nconst ResultButton = styled.button`\r\n    padding: 5px;\r\n    margin: 3px;\r\n    background-color: #ccc;\r\n    font-size: 110%;\r\n    font-family: inherit;\r\n    border-radius: 10px;\r\n    overflow-wrap: normal;\r\n`;\r\n/*\r\nconst RedirectButton = styled(ResultButton)`\r\n    background-color: #555555;\r\n    border: none;\r\n    color: white;\r\n    padding: 1em 5em;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 24px;\r\n    margin: 8px 4px;\r\n    cursor: pointer;\r\n    box-shadow: 0 2.5px 5px 0;\r\n    border-radius: 0px;\r\n`;*/\r\n\r\nconst SliderPage = () => {\r\n    return (\r\n        <div className=\"my-5\">\r\n          <label htmlFor=\"customRange1\">Example range</label>\r\n          <input type=\"range\" className=\"custom-range\" id=\"customRange1\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nclass NavBar extends Component{\r\n    constructor(){\r\n        super()  \r\n        this.gotoHome = this.gotoHome.bind(this);\r\n        this.gotoSite = this.gotoSite.bind(this);\r\n        this.gotoAProfile = this.gotoAProfile.bind(this);        \r\n        this.gotoDiscover = this.gotoDiscover.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n\r\n        this.state = { redirect: null };\r\n        \r\n    }\r\n    \r\n    renderRedirect = () => {\r\n        if (this.state.redirect){\r\n            //console.log(this.state);\r\n            return <Redirect to={this.state.redirect} />;\r\n        };\r\n        \r\n    }\r\n    \r\n    gotoHome(event){\r\n        //console.log(\"gotoHome\");\r\n        this.setState({ redirect: \"/\" });\r\n    }\r\n    \r\n    gotoSite(event){    \r\n        this.setState({ redirect: \"/sites/\"+this.props.user_id });\r\n    }\r\n    \r\n    gotoAProfile(event){\r\n        var redirectTo = \"/user/\"+this.props.user_id;\r\n        this.setState({ redirect: redirectTo });\r\n    }\r\n    \r\n    gotoDiscover(event){\r\n        this.setState({ redirect: \"/discover/\" });\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n              {this.renderRedirect()}\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <NavLink to=\"/\">Home</NavLink>\r\n                  </Col>\r\n                  <Col>\r\n                    <NavLink to={\"/sites/\"+this.props.user_id}>My Sites</NavLink>\r\n                  </Col>\r\n                  <Col>\r\n                    <NavLink to=\"/discover\">Discover</NavLink>\r\n                  </Col>\r\n                  <Col>\r\n                    <NavLink to={\"/user/\"+this.props.user_id}>My Profile</NavLink>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\n\r\n\r\nexport {BoxPanel, SliderPage, ResultPanel, ResultButton, NavBar};\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios';\r\nimport { withRouter /*,useHistory*/ } from \"react-router\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport renderHTML from 'react-render-html';\r\nimport { ResultButton } from './Components/components.js';\r\nimport { APIURL } from './apiurl.js';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n//const APIURL='';\r\n\r\nconst SitePanel = styled.div`\r\n    background-color: ${props => \r\n        props.siteInfo.background_color.length ? props.siteInfo.background_color : \"\"};\r\n`;\r\n\r\n//component displays all of a user's sites WITH CSS\r\nclass SiteBox extends Component {\r\n    constructor(props){\r\n        super(props); //results (multiple sites) and page='discover' or page='mysites'\r\n        //and this.props.editSite(site_id);\r\n        this.visitSite = this.visitSite.bind(this);\r\n        this.changeSite = this.changeSite.bind(this);\r\n        this.deleteSite = this.deleteSite.bind(this);\r\n        //this.callEdit = this.callEdit.bind(this);\r\n        this.state = {redirect: false, site_id:'', user_id:''};\r\n        this.render = this.render.bind(this);\r\n    }\r\n    visitSite(){\r\n        return (\r\n            this.state.redirect\r\n                ? <Redirect to={'/site/'.concat(this.state.site_id)} />\r\n                : ''\r\n        );        \r\n        //console.log(id);\r\n    }\r\n    deleteSite(event){\r\n        const site_id = event.target.value;\r\n        const user_id = event.target.name;\r\n        \r\n        const url = APIURL.concat('site/', site_id);\r\n        var r=window.confirm(\"are you sure you want to delete your site?\");        \r\n        if (r) {\r\n            \r\n            axios.delete(url, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${this.props.jwt}` \r\n                }\r\n            }).then( response => {\r\n                alert(\"Site was deleted!\");\r\n                window.location.reload();\r\n            }).catch(error => {\r\n                alert(\"Error, authorization failed\");\r\n                console.log(error.response.data.error)\r\n            });\r\n        } \r\n    } \r\n    \r\n    changeSite(event){\r\n        const sid = event.target.value;\r\n        const uid = event.target.name;\r\n        this.setState({redirect:true, site_id:sid, user_id:uid})\r\n    }\r\n\r\n    render(){\r\n        var results = this.props.results;\r\n        \r\n        const sites = [];\r\n        if (Object.keys(results).length > 0){\r\n            for (var key of Object.keys(results['data'])){\r\n                //sites's id\r\n                const siteId = key;\r\n                //all a site info\r\n                const siteInfo = results['data'][siteId];\r\n                //site owner id\r\n                const userId = siteInfo.owner_id;\r\n                \r\n             //html code detection on line 74: maybe there is a better way\r\n                \r\n                \r\n                sites.push(\r\n                    <div key={siteId}>\r\n                      <SitePanel siteInfo = {siteInfo}>\r\n                            {siteInfo['body'].includes(\"<\") ? renderHTML(siteInfo['body']) : <p>{siteInfo['body']}</p> }\r\n                          \r\n                          \r\n                                       \r\n                        {this.props.page === 'mysites' ? \r\n                            <div>\r\n                            <ResultButton value={siteId} name={userId} \r\n                                        onClick={this.changeSite}>Visit</ResultButton>\r\n                            <ResultButton value={siteId} onClick = {\r\n                                () => this.props.editHandler(true,siteId)\r\n                                \r\n                                }>Edit</ResultButton>\r\n                            <ResultButton value={siteId} name={userId} onClick={this.deleteSite}>Delete</ResultButton>\r\n                            \r\n                            </div>\r\n                        : <ResultButton site_id={siteId} name={userId} value={siteId}\r\n                                        onClick={this.changeSite}>Visit</ResultButton>}\r\n                        \r\n                        \r\n                      </SitePanel>    \r\n                      \r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        \r\n        return(\r\n        \r\n            <div>\r\n              {this.visitSite()}\r\n              {sites}\r\n            </div>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\n//displays sitebox (user's sites) AND site creation form\r\n//and update sites\r\nclass SiteCreation0 extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sites:{}, \r\n            background_color:'White',\r\n            name:'',\r\n            body:'', \r\n            genre_music:false,\r\n            genre_art:false,\r\n            genre_film:false,\r\n            genre_writing:false,\r\n            isEditing:false,\r\n            site_id:'',\r\n            callEdit:false\r\n        };\r\n        this.createSite = this.createSite.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.changeCheckbox = this.changeCheckbox.bind(this);\r\n        this.editSite = this.editSite.bind(this);\r\n        this.handleEditorInit = this.handleEditorInit.bind(this);\r\n    }\r\n    handleEditorInit(e, editor){\r\n        this.setState({editor:editor});\r\n        this.state.editor.getBody().style.backgroundColor = this.state.background_color;\r\n    }\r\n    handleEditorChange = (content, editor) => {\r\n        //console.log('Content was updated:', content);\r\n        //console.log('real editor:', editor);\r\n        this.setState({body: content});\r\n        //editor.getBody().style.backgroundColor = this.state.background_color;\r\n    }\r\n    editHandler = (isEditing,site_id) => {\r\n        axios.get(APIURL + 'site/'.concat(site_id)).then( response => {\r\n            //this.setState({'sites' : response});\r\n                \r\n            const editedSite = response['data'][Object.keys(response.data)[0]];\r\n            //console.log('editthis:'+editedSite['body']);\r\n            this.setState({\r\n                body:editedSite['body'], \r\n                name:editedSite['name'],\r\n                background_color:editedSite['background_color'],\r\n                genre_art:editedSite['genre_art'],\r\n                genre_film:editedSite['genre_film'],\r\n                genre_music:editedSite['genre_music'],\r\n                genre_writing:editedSite['genre_writing']\r\n            });\r\n            //this.handleEditorChange(editedSite['body']);\r\n             \r\n        });\r\n        this.setState({\r\n            isEditing: isEditing,\r\n            site_id: site_id\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        const user_id = this.props.match.params.user_id;\r\n        axios.get(APIURL + 'sites/'.concat(user_id)).then( response => {\r\n            this.setState({'sites' : response});\r\n            //console.log(response);\r\n        });\r\n        \r\n        axios.get(APIURL + 'user/'.concat(user_id)).then( response => {\r\n            this.setState({'name' : response['data'].name});\r\n        });\r\n        \r\n    }\r\n    componentDidUpdate(){\r\n        if(this.state.editor) this.state.editor.getBody().style.backgroundColor = this.state.background_color;\r\n    }\r\n    editSite(){\r\n        const site_id = this.state.site_id;\r\n\r\n        axios.put(APIURL+\"site/\"+site_id, {\r\n            background_color:this.state.background_color,\r\n            name:this.state.name,\r\n            body:this.state.body,\r\n            genre_music:this.state.genre_music,\r\n            genre_art:this.state.genre_art,\r\n            genre_film:this.state.genre_film,\r\n            genre_writing:this.state.genre_writing,\r\n            user_id:this.props.match.params.user_id\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.props.jwt}` \r\n            }\r\n        }).then(response => {\r\n            \r\n            //console.log('edit site response',response);\r\n            const newSite = response['data'];\r\n            //console.log(\"SITE TO BE ADDED\",newSite);\r\n            \r\n            const sites = this.state.sites;\r\n            //console.log(\"CURRENT SITES\",sites);\r\n            \r\n            sites['data'][newSite.site_id] = newSite;\r\n            //console.log(\"NEW SITES\",sites);\r\n            \r\n            this.setState({\r\n                sites:sites,\r\n                \r\n                background_color:'White',\r\n                name:'',\r\n                body:'', \r\n                genre_music:false,\r\n                genre_art:false,\r\n                genre_film:false,\r\n                genre_writing:false,\r\n                isEditing:false,\r\n                site_id:'',\r\n                callEdit:false\r\n            });\r\n            \r\n        });\r\n            \r\n        \r\n        this.setState({callEdit:false});\r\n        \r\n        \r\n    }\r\n    \r\n    createSite(){\r\n        const user_id = this.props.match.params.user_id;\r\n        axios.post(APIURL+\"sites/\"+user_id, {\r\n            background_color:this.state.background_color,\r\n            name:this.state.name,\r\n            body:this.state.body,\r\n            genre_music:this.state.genre_music,\r\n            genre_art:this.state.genre_art,\r\n            genre_film:this.state.genre_film,\r\n            genre_writing:this.state.genre_writing\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.props.jwt}` \r\n            }\r\n        }).then(response => {\r\n            this.setState({'sites' : response});\r\n            //console.log(response);\r\n        });\r\n    }\r\n    \r\n    changeColor(event){\r\n        this.setState({ [event.target.name] : event.target.value });        \r\n    }\r\n    \r\n    changeCheckbox(event){\r\n        this.setState({ [event.target.name] : event.target.checked });\r\n    }\r\n    \r\n    render(){\r\n        //console.log('editor in the state',this.state.editor);\r\n        return(\r\n            \r\n\r\n            <div>\r\n                <form>\r\n\r\n                <p>Create a new site below:</p>\r\n              \r\n                <br />\r\n                Background Color\r\n                <select name='background_color' value={this.state.background_color}\r\n                        onChange={this.changeColor}>            \r\n                  <option value=\"Maroon\">Maroon</option>\r\n                  <option value=\"Red\">Red</option>\r\n                  <option value=\"Orange\">Orange</option>\r\n                  <option value=\"Yellow\">Yellow</option>\r\n                  <option value=\"Olive\">Olive</option>\r\n                  <option value=\"Green\">Green</option>\r\n                  <option value=\"Purple\">Purple</option>\r\n                  <option value=\"Fuchsia\">Fuchsia</option>\r\n                  <option value=\"Lime\">Lime</option>\r\n                  <option value=\"Teal\">Teal</option>\r\n                  <option value=\"Gray\">Gray</option>\r\n                  <option value=\"White\">White</option>\r\n                </select>\r\n                <br />\r\n                <div>\r\n                \r\n                    Genre: \r\n                    Music<input \r\n                    type=\"checkbox\" \r\n                    name=\"genre_music\"\r\n                    onChange={this.changeCheckbox} checked={this.state.genre_music}>\r\n                    </input>\r\n\r\n                    Art<input \r\n                    type=\"checkbox\" \r\n                    name=\"genre_art\"\r\n                    onChange={this.changeCheckbox} checked={this.state.genre_art}>\r\n                    </input>\r\n\t\t       \r\n                    Film<input \r\n                    type=\"checkbox\" \r\n                    name=\"genre_film\"\r\n                    onChange={this.changeCheckbox} checked={this.state.genre_film}>\r\n                    </input>\r\n\t\t       \r\n                    Writing<input \r\n                    type=\"checkbox\" \r\n                    name=\"genre_writing\"\r\n                    onChange={this.changeCheckbox} checked={this.state.genre_writing}>\r\n                    </input>\r\n\t\t        </div>\r\n\t\t        <br/>\r\n                </form>\r\n                {this.state.isEditing ? \r\n                    <ResultButton onClick={this.editSite}> Submit Edited Site </ResultButton>\r\n                :\r\n                    <ResultButton onClick={this.createSite}> Create Site </ResultButton>\r\n                }\r\n                <Editor\r\n                    id='myeditor'\r\n                    apiKey='lvwpf2nbss83ux7xe0d0fardg0q3ddmna7wx5b62clsisnjn' \r\n                    value={this.state.body}\r\n                    init={{\r\n                        height: 500,\r\n                        menubar: true,\r\n                        plugins: [\r\n                         'advlist autolink lists link image charmap print preview anchor',\r\n                         'searchreplace visualblocks code fullscreen',\r\n                         'insertdatetime media table paste code help wordcount'\r\n                        ],\r\n                        toolbar:\r\n                         'undo redo | formatselect | bold italic backcolor | \\\r\n                         alignleft aligncenter alignright alignjustify | \\\r\n                         bullist numlist outdent indent | removeformat | help'\r\n                    }}\r\n                    onInit={this.handleEditorInit}\r\n                    onEditorChange={this.handleEditorChange}\r\n                />;\r\n            \r\n              <p>These are your created sites:</p>\r\n              <SiteBox results={this.state.sites} page={'mysites'} jwt={this.props.jwt} editHandler={this.editHandler} />\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//displays a single site\r\nclass SiteScreen0 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = { site: {\r\n            title: '',\r\n                body: '',\r\n                background_color: 'white',\r\n                genre_music: '',\r\n                genre_art: '',\r\n                genre_film: '',\r\n                genre_writing: '',\r\n                owner_id: ''\r\n        }, site_id:'', redirect:false };\r\n        \r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        const site_id = this.props.match.params.site_id;\r\n        const url = APIURL.concat('site/', site_id);\r\n        \r\n        //get site\r\n        axios.get(url).then( response => {\t\t\r\n            const id = Object.keys(response['data'])[0];\r\n            const ret = response['data'][id];\r\n            //console.log(ret);\r\n            this.setState({ 'site': ret, 'site_id': site_id });         \r\n        });\r\n        \r\n        \r\n    }\r\n    \r\n    render(){\r\n        var site = this.state.site;\r\n        //IS THERE A BETTER WAY TO DETECT HTML CODE\r\n        return (\r\n        <div>\r\n        \r\n        <div> \t     \r\n\t      <SitePanel siteInfo = {this.state.site}>\r\n\t\t\r\n\t\t\r\n          {this.state.site['body'].includes(\"<\") ? renderHTML(this.state.site['body']) : <p>{this.state.site['body']}</p> }\r\n\r\n          <div>\r\n          <br />\r\n          Genres:\r\n          {this.state.site['genre_music'].toString() === 'true' ? <li>Music</li>  : ''}\r\n          {this.state.site['genre_art'].toString() === 'true' ? <li> Art </li> : ''}\r\n          {this.state.site['genre_film'].toString() === 'true' ? <li> Film </li> : ''}\r\n          {this.state.site['genre_writing'].toString() === 'true' ? <li> Writing </li> : ''}\r\n          <br />\r\n          </div>\r\n          <p> site created by: {this.state.site.name} </p>\r\n          \r\n          {this.state.showEdit ? <ResultButton onClick={this.editSite}> Edit</ResultButton> : '' }\r\n          {this.state.showDelete ? <ResultButton onClick={this.deleteSite}> Delete</ResultButton> : '' }\r\n          {this.state.redirect ? <Redirect to={\"/sites/\"+this.state.site.owner_id} /> : ''}\r\n\t      </SitePanel> \r\n          </div>\r\n                \r\n\t    </div>\r\n        );\r\n    }   \r\n}\r\n\r\nconst SiteCreation = withRouter(SiteCreation0);\r\nconst SiteScreen = withRouter(SiteScreen0);\r\nexport {SiteBox, SiteScreen, SitePanel, SiteCreation};\r\n","export const APIURL = 'api/';\r\n//export const APIURL = 'http://localhost:5000/api/';\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios';\r\n\r\nimport './App.css';\r\n// import {SliderPage, ResultPanel, ResultSites} from './Components/components.js';\r\nimport {SliderPage, ResultPanel} from './Components/components.js';\r\nimport {SiteBox} from './Site.js';\r\nimport { APIURL } from './apiurl.js';\r\n\r\n//submit discover filter button\r\nconst FilterButton = styled.button`\r\n\tpadding: 5px;\r\n\tmargin: 3px;\r\n\tbackground-color: #ccc;\r\n\tfont-size: 110%;\r\n\tfont-family: inherit;\r\n`;\r\n\r\n//filter panel for genres\r\nconst FilterPanel = styled.div`\r\n\tdisplay: inline-block;\r\n\tfont-size: 1em;\r\n\tbackground-color: #444;\r\n\tcolor: #fff;\r\n\tborder-radius: 0px;\r\n\tpadding: 20px;\r\n\tmargin: 10px;\r\n\tfont-family: serif\r\n`;\r\n\r\n//genre_music, genre_art, genre_film, genre_writing\r\nexport default class DiscoverScreen extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\t//at first there is no state to submit\r\n\t//this.state = {}\r\n        this.state = { genre_music: \"\", genre_art: \"0\", genre_film: \"0\",\r\n                       genre_writing: \"0\", results: {} };\r\n\t\r\n        this.updateFilter = this.updateFilter.bind(this);\r\n\t    this.submitSearch = this.submitSearch.bind(this);\r\n        this.updateMayContain = this.updateMayContain.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        document.getElementsByName(\"music\")[0].checked = true;\r\n    }\r\n    updateFilter(event) {\r\n\tif (event.target.checked) {\r\n\t    //make may genre unchecked\r\n\t    var mayName = event.target.name.substring(6);\r\n\t    document.getElementsByName(mayName)[0].checked = false;\r\n\t    \r\n\t    this.setState({\r\n\t\t[event.target.name] : \"1\",\r\n\t    });\r\n\t} else {\r\n\t    this.setState({\r\n\t\t[event.target.name] : \"0\",\r\n\t    });\r\n\t}\r\n    }\r\n    \r\n    updateMayContain(event) {\r\n        var genre = \"genre_\".concat(event.target.name);\r\n        if (event.target.checked){\r\n            //make must contain genre unchecked\r\n            \r\n            document.getElementsByName(genre)[0].checked = false;\r\n            this.setState({ [genre] : \"\",});\r\n        } else {\r\n            this.setState({ [genre] : \"0\",});\r\n        }\r\n    }\r\n    \r\n    submitSearch() {\r\n        //erase old results before creating new ones (if there is any)  console.log(response);\r\n        //this.setState({'results' : {}});\r\n        const payload = {...this.state};\r\n        delete payload.results;\r\n        axios.post(APIURL + 'discover', payload).then( response => {\r\n            /*example of response---------\r\n              { \r\n              1 : {title:'example title', body: 'example body', ... },\r\n              2 : {title:'title example', body: 'body example', ... },\r\n              }\r\n            */\r\n            this.setState({'results' : response});\r\n            console.log(this.state);\r\n        });\r\n    };\r\n    \r\n    render(){\r\n\treturn (\r\n\t    <div>\r\n\t      <FilterPanel>\r\n\t\t<h1>Select Genre(s)</h1>\r\n\t\t<h2>must contain | may contain</h2>\r\n\t\tMusic<input \r\n\t               type=\"checkbox\" \r\n\t               name=\"genre_music\"\r\n\t               onChange={this.updateFilter.bind(this)}>\r\n\t\t     </input>\r\n\t\tMusic<input \r\n\t\t       type=\"checkbox\" \r\n\t\t       name=\"music\"\r\n\t\t       onChange={this.updateMayContain.bind(this)}>\r\n\t\t     </input><br/>\r\n\t\tArt<input \r\n\t\t     type=\"checkbox\" \r\n\t\t     name=\"genre_art\"\r\n\t\t     onChange={this.updateFilter.bind(this)}>\r\n\t\t   </input>\r\n\t\tArt<input \r\n\t\t     type=\"checkbox\" \r\n\t\t     name=\"art\"\r\n\t\t     onChange={this.updateMayContain.bind(this)}>\r\n\t\t   </input><br/>\r\n\t\tFilm<input \r\n\t\t      type=\"checkbox\" \r\n\t\t      name=\"genre_film\"\r\n\t\t      onChange={this.updateFilter.bind(this)}>\r\n\t\t    </input>\r\n\t\tFilm<input \r\n\t\t      type=\"checkbox\" \r\n\t\t      name=\"film\"\r\n\t\t      onChange={this.updateMayContain.bind(this)}>\r\n\t\t    </input><br/>\r\n\t\tWriting<input \r\n\t\t\t type=\"checkbox\" \r\n\t\t\t name=\"genre_writing\"\r\n\t\t\t onChange={this.updateFilter.bind(this)}>\r\n\t\t       </input>\r\n\t\tWriting<input \r\n\t\t\t type=\"checkbox\" \r\n\t\t\t name=\"writing\"\r\n\t\t\t onChange={this.updateMayContain.bind(this)}>\r\n\t\t       </input><br/>\t\r\n\t        \r\n\t\t<FilterButton type=\"button\" onClick={this.submitSearch}>\r\n                  Discover!\r\n                </FilterButton>\r\n\t      </FilterPanel>\r\n\t      <br />\r\n\t      <ResultPanel>\r\n\t\t<SiteBox results={this.state.results} page={'discover'} />\r\n\t      </ResultPanel>\r\n\t    </div>\r\n\t);\r\n    }\r\n}\r\n\r\nexport {DiscoverScreen, FilterButton, FilterPanel};\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { APIURL } from './apiurl.js';\r\n\r\nclass RegisterScreen extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {username : '', password:'', pass_or_text:'password', email:''};\r\n        this.textType = \"password\"\r\n\r\n        //this.logIt = this.logIt.bind(this)\r\n        this.updateUsername = this.updateUsername.bind(this);\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        this.updateShowPassword = this.updateShowPassword.bind(this);\r\n        this.updateEmail = this.updateEmail.bind(this);\r\n\t\tthis.goRegister = this.goRegister.bind(this);\r\n    }\r\n    \r\n    updateUsername(event) {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    \r\n    updatePassword(event) {\r\n        this.setState({password: event.target.value});           \r\n    }\r\n    \r\n    updateEmail(event){\r\n        this.setState({email: event.target.value});\r\n    }\r\n    \r\n    updateShowPassword(event){\r\n        this.setState({pass_or_text: (this.state.pass_or_text === 'password' ? 'text' : 'password')});\r\n    }\r\n    \r\n    goRegister(event){\r\n\t//console.log({msg:'successful button click'});\r\n        if (this.state.username && this.state.password && this.state.email){    \r\n            axios.post(APIURL + 'user', {\r\n                name: this.state.username, \r\n                password: this.state.password, \r\n                email: this.state.email}).then( response => {\r\n                /*example of response---------\r\n                  { \r\n                  1 : {title:'example title', body: 'example body', ... },\r\n                  2 : {title:'title example', body: 'body example', ... },\r\n                  }\r\n                */\r\n                \r\n                alert(\"account successfully created\");\r\n                \r\n                console.log(response);\r\n                //this.setState({['results'] : response});\r\n                });\r\n        }else{\r\n            alert(\"account register failed, please try again\");\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const { pass_or_text } = this.state;\r\n        \r\n        return(\r\n            <div>\r\n              <form>\r\n                <p>register</p>\r\n                email<input type=\"text\" name=\"email\" value={this.state.email}\r\n                            onChange={this.updateEmail}/>\r\n        \tusername<input type=\"text\" value={this.state.username}\r\n\t                       onChange={this.updateUsername}/>\r\n\t        <br/>\r\n        \tpassword<input type={pass_or_text} value={this.state.password} name=\"password\"\r\n        \t               onChange={this.updatePassword}/>\r\n\t        <br/>\r\n        \tshow password<input type=\"checkbox\" value=\"\" name=\"ShowPassword\"\r\n        \t                    onChange={this.updateShowPassword}/>\r\n\t        <br/>\r\n\t        <button type='button' onClick={ this.goRegister} \r\n\t                name='registerButton'>register</button>\r\n\t      </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { RegisterScreen };\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\n//import styled, { css } from 'styled-components'\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router\";\r\nimport { APIURL } from './apiurl.js';\r\n\r\nimport {\r\n// eslint-disable-next-line\r\n  BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\n//PROFILE COMPONENT\r\nclass UserInformation extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\t\r\n        this.state = {userInfo:{}, selectedFile: null, imageURL:''};\r\n    \r\n        this.handleUploadImage = this.handleUploadImage.bind(this);\r\n    }\t\r\n    \r\n    componentDidMount(){\r\n\t//const id = this.props.match.params.id;\r\n\tconst user_id = this.props.match.params.user_id;\r\n        \r\n\taxios.get(APIURL + 'user/'.concat(user_id)).then( response => {\r\n\t    this.setState({'userInfo' : response['data']});\r\n\t    console.log(response);\r\n\t});\r\n    }\r\n    handleUploadImage(ev) {\r\n        ev.preventDefault();\r\n\r\n        const data = new FormData();\r\n        data.append('file', this.uploadInput.files[0]);\r\n        data.append('user_id', this.state.userInfo.user_id);\r\n        \r\n        axios\r\n        .post(APIURL+'photo', data)\r\n        .then(res => console.log(res))\r\n        .catch(err => console.warn(err));\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    render(){\t\t\r\n        //getting every key of user's info\r\n        var userStuff = [];\r\n        for (var key of Object.keys(this.state['userInfo'])){\r\n            userStuff.push(\r\n                <div key={key}>\r\n                    <p>{key}:{this.state.userInfo[key]}</p>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n        return(\r\n            <>\r\n              <div>\r\n                <p>This is {this.state.userInfo['name']}'s profile</p>\r\n                {userStuff}\r\n              </div>\r\n              <div>\r\n              <img src={APIURL+'/photo/'+this.state.userInfo.user_id} alt=\"img\" />\r\n              \r\n              <form onSubmit={this.handleUploadImage}>\r\n                <div>\r\n                  <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\r\n                </div>\r\n                \r\n                <div>\r\n                  <button>Upload</button>\r\n                </div>\r\n                \r\n              </form>\r\n                      \r\n              </div>\r\n              \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst Profile = withRouter(UserInformation);\r\nexport {Profile};\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport axios from 'axios';\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n  // eslint-disable-next-line\r\n  Link, useRouteMatch, useParams\r\n} from \"react-router-dom\";\r\nimport { Container /*, Col, Row */ } from 'react-bootstrap';\r\n\r\nimport './App.css';\r\n// eslint-disable-next-line\r\nimport {DiscoverScreen} from './Discover.js';\r\nimport {SiteScreen, SiteCreation} from './Site.js';\r\nimport {RegisterScreen} from './Register.js';\r\nimport {Profile} from './Profile.js';\r\n\r\n//components imported\r\nimport {BoxPanel, NavBar,  /*, ResultSites */ } from './Components/components.js';\r\n\r\nimport { APIURL } from './apiurl.js';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {loginToken: '', user_id:''};\r\n        this.login = this.login.bind(this);\r\n        \r\n        \r\n    }\r\n    componentDidMount(){\r\n        const cookies = new Cookies();\r\n        //console.log(cookies.get('jwt'));\r\n        //console.log(cookies.get('user_id'));\r\n        if (cookies.get('jwt') && cookies.get('user_id') && cookies.get('name')){\r\n            this.setState({ loginToken: cookies.get('jwt'), user_id: cookies.get('user_id'), name: cookies.get('name') });\r\n        }\r\n        \r\n        \r\n    }\r\n    login(username, password)  {\r\n        console.log(\"logging in: \"+APIURL);\r\n    axios.put(\r\n            APIURL + 'user',\r\n            { 'name':username, 'password':password})\r\n            .then( response => {\r\n                if (!response['data']){\r\n                    alert(\"incorrect password, please try again\");\r\n                }\r\n                else if (response['data']['jwt'].length > 0){\r\n                    this.setState({'loginToken' : response['data']['jwt'],\r\n                                   'user_id':response['data']['id'] });\r\n                    const cookies = new Cookies();\r\n                    cookies.set('user_id', response['data']['id'], { path: '/', expires: new Date(Date.now()+3600000) });\r\n                    cookies.set('jwt', response['data']['jwt'], { path: '/', expires: new Date(Date.now()+3600000) });\r\n                    cookies.set('name', username, { path: '/', expires: new Date(Date.now()+3600000) });\r\n                    \r\n                    \r\n                }else{\r\n                    alert(\"username is incorrect, please try again\");\r\n                }                    \r\n        //store user's id and token into cookies\r\n        \r\n\t\t//console.log(response);\r\n\t    }).catch(\r\n            function (error) {\r\n              console.log('Show error notification!')\r\n              return Promise.reject(error)\r\n            }\r\n        );  // todo: add error-checking\r\n        \r\n        \r\n        \r\n    }\r\n    \r\n    render(){\r\n        \r\n    //<DiscoverScreen /> route guide\r\n\treturn (\r\n\t    <HashRouter>\r\n              <div className=\"App\">\r\n                <Banner login={ this.login } user_id={ this.state.user_id } />\r\n                \r\n\t\t<Switch>\r\n\t\t  <Route exact path=\"/\">\r\n\t\t    <p>this is the app</p>\r\n\t\t  </Route>\r\n                  \r\n\t\t  <Route path=\"/user/:user_id\">\r\n\t\t    <Profile />                   \r\n\t\t  </Route>\r\n          \r\n                  <Route exact path=\"/sites/:user_id\">\r\n                    <SiteCreation jwt={this.state.loginToken} />\r\n                  </Route>\r\n                  \r\n\t\t  <Route exact path=\"/site/:site_id\">\r\n\t\t    <SiteScreen user_id={ this.state.user_id } jwt={this.state.loginToken}  />\r\n\t\t  </Route>\r\n                  \r\n\t\t  <Route path=\"/register\">\r\n                    <RegisterScreen/>\r\n\t\t  </Route>\r\n                  \r\n                  <Route path=\"/discover\">\r\n                    <DiscoverScreen />\r\n                  </Route>\r\n                  \r\n                  <Route path=\"/user\">\r\n                    <p>Authorization Failed: You must be logged in to view your profile</p>\r\n                  </Route>\r\n\t\t</Switch>\r\n\t      </div>\r\n\t    </HashRouter>\r\n\t);\r\n    }\r\n}\r\n\r\nclass Banner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateUsername = this.updateUsername.bind(this);\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        this.callLogin = this.callLogin.bind(this);\r\n        this.gotoRegister = this.gotoRegister.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n        this.state = { name:'', password:'', user_id:'', redirect: false, isLoggedIn: false };\r\n        \r\n        this.checkLogin = this.checkLogin.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        //makes user_id the same as app (so if logged in on app, logged in on banner)\r\n        \r\n    }\r\n\r\n    gotoRegister(event) {\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    renderRedirect() {\r\n        return (\r\n            this.state.redirect ? <Redirect to='/register/'/> : ''\r\n        );\r\n    }\r\n    \r\n    updateUsername(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    \r\n    updatePassword(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    callLogin(event) {\r\n        if (this.state.name !== 0 && this.state.password !== 0){\r\n            this.props.login(this.state.name, this.state.password);\r\n        }\r\n    }\r\n    checkLogin(){\r\n        const cookies = new Cookies();\r\n        \r\n        //console.log(\"user_id:\"+this.props.user_id);\r\n        \r\n        if(cookies.get('name') && cookies.get('jwt') && cookies.get('user_id') && this.state.isLoggedIn === false) {\r\n            this.setState({user_id: this.props.user_id, isLoggedIn:true});\r\n            console.log('logged in successful');\r\n        }\r\n        \r\n        \r\n    }\r\n    logout(event){\r\n        const cookies = new Cookies();\r\n        cookies.remove('name')\r\n        cookies.remove('jwt')\r\n        cookies.remove('user_id')\r\n        this.setState({isLoggedIn: false});\r\n        \r\n    }\r\n    render() {\r\n        // todo: make a conditional render to just show \"logged in\" when logged in\r\n        // todo: add a register button\r\n        const cookies = new Cookies();\r\n        //console.log(\"cookies\"+cookies.get('name')+cookies.get('jwt')+cookies.get('user_id'));\r\n        if (this.state.user_id === ''){\r\n            console.log(\"logging in right now\");\r\n            setInterval(this.checkLogin, 1000 );\r\n            //this.checkLogin();\r\n            //this.render()\r\n        }\r\n        \r\n        return (          \r\n            <div className=\"App-banner\">\r\n              <div className='App-title'>\r\n                <Container fluid>                  \r\n                  <BoxPanel>\r\n                    Nathan's World\r\n                  </BoxPanel>\r\n                                    \r\n                  <BoxPanel>\r\n                    { !this.state.isLoggedIn ? \r\n                      <div>\r\n                        {this.renderRedirect()}\r\n                        <form>\r\n                          username<input type=\"text\" value={this.state.name}\r\n                                         onChange={this.updateUsername}/>\r\n                          <br/>\r\n                          password<input type=\"password\" name=\"password\" value={this.state.password}\r\n                                         onChange={this.updatePassword}/>\r\n                          <br/>\r\n                          <button type='button' onClick={this.callLogin} \r\n                                  name='loginButton'>LOGIN</button>\r\n                          <button type='button' onClick={this.gotoRegister}\r\n                                  name='registerButton'>Register</button>\r\n                        </form>\r\n                      </div> \r\n                      \r\n                      : \r\n                      \r\n                      <div>\r\n                      <p>Logged in as: {cookies.get('name')}</p>\r\n                      <button type='button' onClick={this.logout}>LOGOUT</button>\r\n                      </div>\r\n                    }\r\n                  </BoxPanel>\r\n                  \r\n                  <NavBar user_id = {this.props.user_id} />\r\n                  \r\n                </Container>\r\n              </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n//export Banner, RegistrationScreen; Why does banner not work even when its exported?\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}