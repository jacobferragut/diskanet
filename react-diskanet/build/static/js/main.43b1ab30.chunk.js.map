{"version":3,"sources":["Components/components.js","apiurl.js","Site.js","Discover.js","Register.js","Profile.js","App.js","serviceWorker.js","index.js"],"names":["BoxPanel","styled","div","ResultPanel","ResultButton","button","NavBar","renderRedirect","state","redirect","to","gotoHome","bind","gotoSite","gotoAProfile","gotoDiscover","event","this","setState","props","user_id","redirectTo","Container","Row","Col","Component","APIURL","SitePanel","siteInfo","background_color","length","SiteBox","visitSite","changeSite","deleteSite","site_id","render","concat","target","value","url","name","window","confirm","axios","delete","headers","jwt","then","response","alert","location","reload","catch","error","console","log","data","sid","uid","results","sites","Object","keys","siteId","userId","owner_id","push","key","includes","renderHTML","page","onClick","editHandler","SiteCreation0","handleEditorChange","content","editor","body","isEditing","get","editedSite","genre_art","genre_film","genre_music","genre_writing","callEdit","createSite","changeColor","changeCheckbox","editSite","handleEditorInit","e","getBody","style","backgroundColor","match","params","put","newSite","post","checked","onChange","type","id","apiKey","init","height","menubar","plugins","toolbar","onInit","onEditorChange","SiteScreen0","site","title","ret","toString","showEdit","showDelete","SiteCreation","withRouter","SiteScreen","FilterButton","FilterPanel","DiscoverScreen","updateFilter","submitSearch","updateMayContain","document","getElementsByName","mayName","substring","genre","payload","RegisterScreen","username","password","pass_or_text","email","textType","updateUsername","updatePassword","updateShowPassword","updateEmail","goRegister","UserInformation","userInfo","selectedFile","imageURL","handleUploadImage","ev","preventDefault","FormData","append","uploadInput","files","res","err","warn","userStuff","src","alt","onSubmit","ref","Profile","App","loginToken","login","cookies","Cookies","set","path","expires","Date","now","Promise","reject","className","exact","Banner","callLogin","gotoRegister","isLoggedIn","checkLogin","logout","remove","setInterval","fluid","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.43b1ab30.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport styled from 'styled-components';\nimport { Redirect, NavLink } from 'react-router-dom';\n//import { withRouter } from \"react-router\";\n\nimport { Container, Col, Row } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst BoxPanel = styled.div`\n    font-size: 30px;\n    background-color: #444;\n    color: #fff;\n    border-radius: 0px;\n    padding: 20px;\n    margin: 10px;\n`;\n\nconst ResultPanel = styled(BoxPanel)`\n    color: #000;\n    background-color: tomato;\n`;\n\nconst ResultButton = styled.button`\n    padding: 5px;\n    margin: 3px;\n    background-color: #ccc;\n    font-size: 110%;\n    font-family: inherit;\n    border-radius: 10px;\n    overflow-wrap: normal;\n`;\n/*\nconst RedirectButton = styled(ResultButton)`\n    background-color: #555555;\n    border: none;\n    color: white;\n    padding: 1em 5em;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 24px;\n    margin: 8px 4px;\n    cursor: pointer;\n    box-shadow: 0 2.5px 5px 0;\n    border-radius: 0px;\n`;*/\n\nconst SliderPage = () => {\n    return (\n        <div className=\"my-5\">\n          <label htmlFor=\"customRange1\">Example range</label>\n          <input type=\"range\" className=\"custom-range\" id=\"customRange1\" />\n        </div>\n    );\n}\n\n\n\nclass NavBar extends Component{\n    constructor(){\n        super()  \n        this.gotoHome = this.gotoHome.bind(this);\n        this.gotoSite = this.gotoSite.bind(this);\n        this.gotoAProfile = this.gotoAProfile.bind(this);        \n        this.gotoDiscover = this.gotoDiscover.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this);\n\n        this.state = { redirect: null };\n        \n    }\n    \n    renderRedirect = () => {\n        if (this.state.redirect){\n            //console.log(this.state);\n            return <Redirect to={this.state.redirect} />;\n        };\n        \n    }\n    \n    gotoHome(event){\n        //console.log(\"gotoHome\");\n        this.setState({ redirect: \"/\" });\n    }\n    \n    gotoSite(event){    \n        this.setState({ redirect: \"/sites/\"+this.props.user_id });\n    }\n    \n    gotoAProfile(event){\n        var redirectTo = \"/user/\"+this.props.user_id;\n        this.setState({ redirect: redirectTo });\n    }\n    \n    gotoDiscover(event){\n        this.setState({ redirect: \"/discover/\" });\n    }\n    \n    render(){\n        return(\n            <div>\n              {this.renderRedirect()}\n              <Container>\n                <Row>\n                  <Col>\n                    <NavLink to=\"/\">Home</NavLink>\n                  </Col>\n                  <Col>\n                    <NavLink to={\"/sites/\"+this.props.user_id}>My Sites</NavLink>\n                  </Col>\n                  <Col>\n                    <NavLink to=\"/discover\">Discover</NavLink>\n                  </Col>\n                  <Col>\n                    <NavLink to={\"/user/\"+this.props.user_id}>My Profile</NavLink>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n        );\n    }   \n}\n\n\n\nexport {BoxPanel, SliderPage, ResultPanel, ResultButton, NavBar};\n","export const APIURL = (\n    process.env.NODE_ENV === 'production' ? 'api/' : 'http://localhost:5000/api/'\n);\n\n// export const APIURL = 'api/';\n// export const APIURL = 'http://localhost:5000/api/';\n","import React from 'react';\nimport { Component } from 'react';\nimport styled from 'styled-components'\nimport axios from 'axios';\nimport { withRouter /*,useHistory*/ } from \"react-router\";\nimport { Redirect } from 'react-router-dom';\nimport renderHTML from 'react-render-html';\nimport { ResultButton } from './Components/components.js';\nimport { APIURL } from './apiurl.js';\nimport { Editor } from '@tinymce/tinymce-react';\n\n//const APIURL='';\n\nconst SitePanel = styled.div`\n    background-color: ${props => \n        props.siteInfo.background_color.length ? props.siteInfo.background_color : \"\"};\n`;\n\n//component displays all of a user's sites WITH CSS\nclass SiteBox extends Component {\n    constructor(props){\n        super(props); //results (multiple sites) and page='discover' or page='mysites'\n        //and this.props.editSite(site_id);\n        this.visitSite = this.visitSite.bind(this);\n        this.changeSite = this.changeSite.bind(this);\n        this.deleteSite = this.deleteSite.bind(this);\n        //this.callEdit = this.callEdit.bind(this);\n        this.state = {redirect: false, site_id:'', user_id:''};\n        this.render = this.render.bind(this);\n    }\n    visitSite(){\n        return (\n            this.state.redirect\n                ? <Redirect to={'/site/'.concat(this.state.site_id)} />\n                : ''\n        );        \n        //console.log(id);\n    }\n    deleteSite(event){\n        const site_id = event.target.value;\n        const user_id = event.target.name;\n        \n        const url = APIURL.concat('site/', site_id);\n        var r=window.confirm(\"are you sure you want to delete your site?\");        \n        if (r) {\n            \n            axios.delete(url, {\n                headers: {\n                    'Authorization': `Bearer ${this.props.jwt}` \n                }\n            }).then( response => {\n                alert(\"Site was deleted!\");\n                window.location.reload();\n            }).catch(error => {\n                alert(\"Error, authorization failed\");\n                console.log(error.response.data.error)\n            });\n        } \n    } \n    \n    changeSite(event){\n        const sid = event.target.value;\n        const uid = event.target.name;\n        this.setState({redirect:true, site_id:sid, user_id:uid})\n    }\n\n    render(){\n        var results = this.props.results;\n        \n        const sites = [];\n        if (Object.keys(results).length > 0){\n            for (var key of Object.keys(results['data'])){\n                //sites's id\n                const siteId = key;\n                //all a site info\n                const siteInfo = results['data'][siteId];\n                //site owner id\n                const userId = siteInfo.owner_id;\n                \n             //html code detection on line 74: maybe there is a better way\n                \n                \n                sites.push(\n                    <div key={siteId}>\n                      <SitePanel siteInfo = {siteInfo}>\n                            {siteInfo['body'].includes(\"<\") ? renderHTML(siteInfo['body']) : <p>{siteInfo['body']}</p> }\n                          \n                          \n                                       \n                        {this.props.page === 'mysites' ? \n                            <div>\n                            <ResultButton value={siteId} name={userId} \n                                        onClick={this.changeSite}>Visit</ResultButton>\n                            <ResultButton value={siteId} onClick = {\n                                () => this.props.editHandler(true,siteId)\n                                \n                                }>Edit</ResultButton>\n                            <ResultButton value={siteId} name={userId} onClick={this.deleteSite}>Delete</ResultButton>\n                            \n                            </div>\n                        : <ResultButton site_id={siteId} name={userId} value={siteId}\n                                        onClick={this.changeSite}>Visit</ResultButton>}\n                        \n                        \n                      </SitePanel>    \n                      \n                    </div>\n                );\n            }\n        }\n        \n        return(\n        \n            <div>\n              {this.visitSite()}\n              {sites}\n            </div>\n        \n        );\n    }\n}\n\n//displays sitebox (user's sites) AND site creation form\n//and update sites\nclass SiteCreation0 extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            sites:{}, \n            background_color:'White',\n            name:'',\n            body:'', \n            genre_music:false,\n            genre_art:false,\n            genre_film:false,\n            genre_writing:false,\n            isEditing:false,\n            site_id:'',\n            callEdit:false\n        };\n        this.createSite = this.createSite.bind(this);\n        this.changeColor = this.changeColor.bind(this);\n        this.changeCheckbox = this.changeCheckbox.bind(this);\n        this.editSite = this.editSite.bind(this);\n        this.handleEditorInit = this.handleEditorInit.bind(this);\n    }\n    handleEditorInit(e, editor){\n        this.setState({editor:editor});\n        this.state.editor.getBody().style.backgroundColor = this.state.background_color;\n    }\n    handleEditorChange = (content, editor) => {\n        //console.log('Content was updated:', content);\n        //console.log('real editor:', editor);\n        this.setState({body: content});\n        //editor.getBody().style.backgroundColor = this.state.background_color;\n    }\n    editHandler = (isEditing,site_id) => {\n        axios.get(APIURL + 'site/'.concat(site_id)).then( response => {\n            //this.setState({'sites' : response});\n                \n            const editedSite = response['data'][Object.keys(response.data)[0]];\n            console.log('editthis:'+editedSite['body']);\n            this.setState({\n                body:editedSite['body'], \n                name:editedSite['name'],\n                background_color:editedSite['background_color'],\n                genre_art:editedSite['genre_art'],\n                genre_film:editedSite['genre_film'],\n                genre_music:editedSite['genre_music'],\n                genre_writing:editedSite['genre_writing']\n            });\n            //this.handleEditorChange(editedSite['body']);\n             \n        });\n        this.setState({\n            isEditing: isEditing,\n            site_id: site_id\n        })\n    }\n    componentDidMount(){\n        const user_id = this.props.match.params.user_id;\n        axios.get(APIURL + 'sites/'.concat(user_id)).then( response => {\n            this.setState({'sites' : response});\n            //console.log(response);\n        });\n        \n        axios.get(APIURL + 'user/'.concat(user_id)).then( response => {\n            this.setState({'name' : response['data'].name});\n        });\n        \n    }\n    componentDidUpdate(){\n        if(this.state.editor) this.state.editor.getBody().style.backgroundColor = this.state.background_color;\n    }\n    editSite(){\n        const site_id = this.state.site_id;\n        \n        \n        \n        \n        axios.put(APIURL+\"site/\"+site_id, {\n            background_color:this.state.background_color,\n            name:this.state.name,\n            body:this.state.body,\n            genre_music:this.state.genre_music,\n            genre_art:this.state.genre_art,\n            genre_film:this.state.genre_film,\n            genre_writing:this.state.genre_writing,\n            user_id:this.props.match.params.user_id\n        }, {\n            headers: {\n                'Authorization': `Bearer ${this.props.jwt}` \n            }\n        }).then(response => {\n            \n            console.log('edit site response',response);\n            const newSite = response['data'];\n            console.log(\"SITE TO BE ADDED\",newSite);\n            \n            const sites = this.state.sites;\n            console.log(\"CURRENT SITES\",sites);\n            \n            sites['data'][newSite.site_id] = newSite;\n            console.log(\"NEW SITES\",sites);\n            \n            this.setState({\n                sites:sites,\n                \n                background_color:'White',\n                name:'',\n                body:'', \n                genre_music:false,\n                genre_art:false,\n                genre_film:false,\n                genre_writing:false,\n                isEditing:false,\n                site_id:'',\n                callEdit:false\n            });\n            \n        });\n            \n        \n        this.setState({callEdit:false});\n        \n        \n    }\n    \n    createSite(){\n        const user_id = this.props.match.params.user_id;\n        axios.post(APIURL+\"sites/\"+user_id, {\n            background_color:this.state.background_color,\n            name:this.state.name,\n            body:this.state.body,\n            genre_music:this.state.genre_music,\n            genre_art:this.state.genre_art,\n            genre_film:this.state.genre_film,\n            genre_writing:this.state.genre_writing\n        }, {\n            headers: {\n                'Authorization': `Bearer ${this.props.jwt}` \n            }\n        }).then(response => {\n            this.setState({'sites' : response});\n            console.log(response);\n        });\n    }\n    \n    changeColor(event){\n        this.setState({ [event.target.name] : event.target.value });        \n    }\n    \n    changeCheckbox(event){\n        this.setState({ [event.target.name] : event.target.checked });\n    }\n    \n    render(){\n        console.log('editor in the state',this.state.editor);\n        return(\n            \n\n            <div>\n                <form>\n\n                <p>Create a new site below:</p>\n              \n                <br />\n                Background Color\n                <select name='background_color' value={this.state.background_color}\n                        onChange={this.changeColor}>            \n                  <option value=\"Maroon\">Maroon</option>\n                  <option value=\"Red\">Red</option>\n                  <option value=\"Orange\">Orange</option>\n                  <option value=\"Yellow\">Yellow</option>\n                  <option value=\"Olive\">Olive</option>\n                  <option value=\"Green\">Green</option>\n                  <option value=\"Purple\">Purple</option>\n                  <option value=\"Fuchsia\">Fuchsia</option>\n                  <option value=\"Lime\">Lime</option>\n                  <option value=\"Teal\">Teal</option>\n                  <option value=\"Gray\">Gray</option>\n                  <option value=\"White\">White</option>\n                </select>\n                <br />\n                <div>\n                \n                    Genre: \n                    Music<input \n                    type=\"checkbox\" \n                    name=\"genre_music\"\n                    onChange={this.changeCheckbox} checked={this.state.genre_music}>\n                    </input>\n\n                    Art<input \n                    type=\"checkbox\" \n                    name=\"genre_art\"\n                    onChange={this.changeCheckbox} checked={this.state.genre_art}>\n                    </input>\n\t\t       \n                    Film<input \n                    type=\"checkbox\" \n                    name=\"genre_film\"\n                    onChange={this.changeCheckbox} checked={this.state.genre_film}>\n                    </input>\n\t\t       \n                    Writing<input \n                    type=\"checkbox\" \n                    name=\"genre_writing\"\n                    onChange={this.changeCheckbox} checked={this.state.genre_writing}>\n                    </input>\n\t\t        </div>\n\t\t        <br/>\n                </form>\n                {this.state.isEditing ? \n                    <ResultButton onClick={this.editSite}> Submit Edited Site </ResultButton>\n                :\n                    <ResultButton onClick={this.createSite}> Create Site </ResultButton>\n                }\n                <Editor\n                    id='myeditor'\n                    apiKey='lvwpf2nbss83ux7xe0d0fardg0q3ddmna7wx5b62clsisnjn' \n                    value={this.state.body}\n                    init={{\n                        height: 500,\n                        menubar: true,\n                        plugins: [\n                         'advlist autolink lists link image charmap print preview anchor',\n                         'searchreplace visualblocks code fullscreen',\n                         'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                         'undo redo | formatselect | bold italic backcolor | \\\n                         alignleft aligncenter alignright alignjustify | \\\n                         bullist numlist outdent indent | removeformat | help'\n                    }}\n                    onInit={this.handleEditorInit}\n                    onEditorChange={this.handleEditorChange}\n                />;\n            \n              <p>These are your created sites:</p>\n              <SiteBox results={this.state.sites} page={'mysites'} jwt={this.props.jwt} editHandler={this.editHandler} />\n              \n            </div>\n        );\n    }\n}\n\n//displays a single site\nclass SiteScreen0 extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = { site: {\n            title: '',\n                body: '',\n                background_color: 'white',\n                genre_music: '',\n                genre_art: '',\n                genre_film: '',\n                genre_writing: '',\n                owner_id: ''\n        }, site_id:'', redirect:false };\n        \n        \n    }\n    \n    componentDidMount(){\n        const site_id = this.props.match.params.site_id;\n        const url = APIURL.concat('site/', site_id);\n        \n        //get site\n        axios.get(url).then( response => {\t\t\n            const id = Object.keys(response['data'])[0];\n            const ret = response['data'][id];\n            //console.log(ret);\n            this.setState({ 'site': ret, 'site_id': site_id });         \n        });\n        \n        \n    }\n    \n    render(){\n        var site = this.state.site;\n        //IS THERE A BETTER WAY TO DETECT HTML CODE\n        return (\n        <div>\n        \n        <div> \t     \n\t      <SitePanel siteInfo = {this.state.site}>\n\t\t\n\t\t\n          {this.state.site['body'].includes(\"<\") ? renderHTML(this.state.site['body']) : <p>{this.state.site['body']}</p> }\n\n          <div>\n          <br />\n          Genres:\n          {this.state.site['genre_music'].toString() === 'true' ? <li>Music</li>  : ''}\n          {this.state.site['genre_art'].toString() === 'true' ? <li> Art </li> : ''}\n          {this.state.site['genre_film'].toString() === 'true' ? <li> Film </li> : ''}\n          {this.state.site['genre_writing'].toString() === 'true' ? <li> Writing </li> : ''}\n          <br />\n          </div>\n          <p> site created by: {this.state.site.name} </p>\n          \n          {this.state.showEdit ? <ResultButton onClick={this.editSite}> Edit</ResultButton> : '' }\n          {this.state.showDelete ? <ResultButton onClick={this.deleteSite}> Delete</ResultButton> : '' }\n          {this.state.redirect ? <Redirect to={\"/sites/\"+this.state.site.owner_id} /> : ''}\n\t      </SitePanel> \n          </div>\n                \n\t    </div>\n        );\n    }   \n}\n\nconst SiteCreation = withRouter(SiteCreation0);\nconst SiteScreen = withRouter(SiteScreen0);\nexport {SiteBox, SiteScreen, SitePanel, SiteCreation};\n","import React from 'react';\nimport { Component } from 'react';\nimport styled from 'styled-components'\nimport axios from 'axios';\n\nimport './App.css';\n// import {SliderPage, ResultPanel, ResultSites} from './Components/components.js';\nimport {SliderPage, ResultPanel} from './Components/components.js';\nimport {SiteBox} from './Site.js';\nimport { APIURL } from './apiurl.js';\n\n//submit discover filter button\nconst FilterButton = styled.button`\n\tpadding: 5px;\n\tmargin: 3px;\n\tbackground-color: #ccc;\n\tfont-size: 110%;\n\tfont-family: inherit;\n`;\n\n//filter panel for genres\nconst FilterPanel = styled.div`\n\tdisplay: inline-block;\n\tfont-size: 1em;\n\tbackground-color: #444;\n\tcolor: #fff;\n\tborder-radius: 0px;\n\tpadding: 20px;\n\tmargin: 10px;\n\tfont-family: serif\n`;\n\n//genre_music, genre_art, genre_film, genre_writing\nexport default class DiscoverScreen extends Component {\n    constructor(props){\n        super(props)\n\t//at first there is no state to submit\n\t//this.state = {}\n        this.state = { genre_music: \"\", genre_art: \"0\", genre_film: \"0\",\n                       genre_writing: \"0\", results: {} };\n\t\n        this.updateFilter = this.updateFilter.bind(this);\n\t    this.submitSearch = this.submitSearch.bind(this);\n        this.updateMayContain = this.updateMayContain.bind(this);\n    }\n    componentDidMount(){\n        document.getElementsByName(\"music\")[0].checked = true;\n    }\n    updateFilter(event) {\n\tif (event.target.checked) {\n\t    //make may genre unchecked\n\t    var mayName = event.target.name.substring(6);\n\t    document.getElementsByName(mayName)[0].checked = false;\n\t    \n\t    this.setState({\n\t\t[event.target.name] : \"1\",\n\t    });\n\t} else {\n\t    this.setState({\n\t\t[event.target.name] : \"0\",\n\t    });\n\t}\n    }\n    \n    updateMayContain(event) {\n        var genre = \"genre_\".concat(event.target.name);\n        if (event.target.checked){\n            //make must contain genre unchecked\n            \n            document.getElementsByName(genre)[0].checked = false;\n            this.setState({ [genre] : \"\",});\n        } else {\n            this.setState({ [genre] : \"0\",});\n        }\n    }\n    \n    submitSearch() {\n        //erase old results before creating new ones (if there is any)  console.log(response);\n        //this.setState({'results' : {}});\n        const payload = {...this.state};\n        delete payload.results;\n        axios.post(APIURL + 'discover', payload).then( response => {\n            /*example of response---------\n              { \n              1 : {title:'example title', body: 'example body', ... },\n              2 : {title:'title example', body: 'body example', ... },\n              }\n            */\n            this.setState({'results' : response});\n            console.log(this.state);\n        });\n    };\n    \n    render(){\n\treturn (\n\t    <div>\n\t      <FilterPanel>\n\t\t<h1>Select Genre(s)</h1>\n\t\t<h2>must contain | may contain</h2>\n\t\tMusic<input \n\t               type=\"checkbox\" \n\t               name=\"genre_music\"\n\t               onChange={this.updateFilter.bind(this)}>\n\t\t     </input>\n\t\tMusic<input \n\t\t       type=\"checkbox\" \n\t\t       name=\"music\"\n\t\t       onChange={this.updateMayContain.bind(this)}>\n\t\t     </input><br/>\n\t\tArt<input \n\t\t     type=\"checkbox\" \n\t\t     name=\"genre_art\"\n\t\t     onChange={this.updateFilter.bind(this)}>\n\t\t   </input>\n\t\tArt<input \n\t\t     type=\"checkbox\" \n\t\t     name=\"art\"\n\t\t     onChange={this.updateMayContain.bind(this)}>\n\t\t   </input><br/>\n\t\tFilm<input \n\t\t      type=\"checkbox\" \n\t\t      name=\"genre_film\"\n\t\t      onChange={this.updateFilter.bind(this)}>\n\t\t    </input>\n\t\tFilm<input \n\t\t      type=\"checkbox\" \n\t\t      name=\"film\"\n\t\t      onChange={this.updateMayContain.bind(this)}>\n\t\t    </input><br/>\n\t\tWriting<input \n\t\t\t type=\"checkbox\" \n\t\t\t name=\"genre_writing\"\n\t\t\t onChange={this.updateFilter.bind(this)}>\n\t\t       </input>\n\t\tWriting<input \n\t\t\t type=\"checkbox\" \n\t\t\t name=\"writing\"\n\t\t\t onChange={this.updateMayContain.bind(this)}>\n\t\t       </input><br/>\t\n\t        \n\t\t<FilterButton type=\"button\" onClick={this.submitSearch}>\n                  Discover!\n                </FilterButton>\n\t      </FilterPanel>\n\t      <br />\n\t      <ResultPanel>\n\t\t<SiteBox results={this.state.results} page={'discover'} />\n\t      </ResultPanel>\n\t    </div>\n\t);\n    }\n}\n\nexport {DiscoverScreen, FilterButton, FilterPanel};\n","import React from 'react';\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { APIURL } from './apiurl.js';\n\nclass RegisterScreen extends Component {\n    constructor(props){\n        super(props)\n        this.state = {username : '', password:'', pass_or_text:'password', email:''};\n        this.textType = \"password\"\n\n        //this.logIt = this.logIt.bind(this)\n        this.updateUsername = this.updateUsername.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n        this.updateShowPassword = this.updateShowPassword.bind(this);\n        this.updateEmail = this.updateEmail.bind(this);\n\t\tthis.goRegister = this.goRegister.bind(this);\n    }\n    \n    updateUsername(event) {\n        this.setState({username: event.target.value});\n    }\n    \n    updatePassword(event) {\n        this.setState({password: event.target.value});           \n    }\n    \n    updateEmail(event){\n        this.setState({email: event.target.value});\n    }\n    \n    updateShowPassword(event){\n        this.setState({pass_or_text: (this.state.pass_or_text === 'password' ? 'text' : 'password')});\n    }\n    \n    goRegister(event){\n\t//console.log({msg:'successful button click'});\n        if (this.state.username && this.state.password && this.state.email){    \n            axios.post(APIURL + 'user', {\n                name: this.state.username, \n                password: this.state.password, \n                email: this.state.email}).then( response => {\n                /*example of response---------\n                  { \n                  1 : {title:'example title', body: 'example body', ... },\n                  2 : {title:'title example', body: 'body example', ... },\n                  }\n                */\n                \n                alert(\"account successfully created\");\n                \n                console.log(response);\n                //this.setState({['results'] : response});\n                });\n        }else{\n            alert(\"account register failed, please try again\");\n        }\n    }\n    \n    render(){\n        const { pass_or_text } = this.state;\n        \n        return(\n            <div>\n              <form>\n                <p>register</p>\n                email<input type=\"text\" name=\"email\" value={this.state.email}\n                            onChange={this.updateEmail}/>\n        \tusername<input type=\"text\" value={this.state.username}\n\t                       onChange={this.updateUsername}/>\n\t        <br/>\n        \tpassword<input type={pass_or_text} value={this.state.password} name=\"password\"\n        \t               onChange={this.updatePassword}/>\n\t        <br/>\n        \tshow password<input type=\"checkbox\" value=\"\" name=\"ShowPassword\"\n        \t                    onChange={this.updateShowPassword}/>\n\t        <br/>\n\t        <button type='button' onClick={ this.goRegister} \n\t                name='registerButton'>register</button>\n\t      </form>\n            </div>\n        );\n    }\n}\n\nexport { RegisterScreen };\n","import React from 'react';\nimport { Component } from 'react';\n//import styled, { css } from 'styled-components'\nimport axios from 'axios';\nimport { withRouter } from \"react-router\";\nimport { APIURL } from './apiurl.js';\n\nimport {\n// eslint-disable-next-line\n  BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams\n} from \"react-router-dom\";\n\n\n//PROFILE COMPONENT\nclass UserInformation extends Component {\n    constructor(props){\n        super(props);\n\t\n        this.state = {userInfo:{}, selectedFile: null, imageURL:''};\n    \n        this.handleUploadImage = this.handleUploadImage.bind(this);\n    }\t\n    \n    componentDidMount(){\n\t//const id = this.props.match.params.id;\n\tconst user_id = this.props.match.params.user_id;\n        \n\taxios.get(APIURL + 'user/'.concat(user_id)).then( response => {\n\t    this.setState({'userInfo' : response['data']});\n\t    console.log(response);\n\t});\n    }\n    handleUploadImage(ev) {\n        ev.preventDefault();\n\n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n        data.append('user_id', this.state.userInfo.user_id);\n        \n        axios\n        .post(APIURL+'photo', data)\n        .then(res => console.log(res))\n        .catch(err => console.warn(err));\n    }\n    \n    \n    \n    \n    render(){\t\t\n        //getting every key of user's info\n        var userStuff = [];\n        for (var key of Object.keys(this.state['userInfo'])){\n            userStuff.push(\n                <div key={key}>\n                    <p>{key}:{this.state.userInfo[key]}</p>\n                </div>\n            );\n        }\n    \n        return(\n            <>\n              <div>\n                <p>This is {this.state.userInfo['name']}'s profile</p>\n                {userStuff}\n              </div>\n              <div>\n              <img src={APIURL+'/photo/'+this.state.userInfo.user_id} alt=\"img\" />\n              \n              <form onSubmit={this.handleUploadImage}>\n                <div>\n                  <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\n                </div>\n                \n                <div>\n                  <button>Upload</button>\n                </div>\n                \n              </form>\n                      \n              </div>\n              \n            </>\n        );\n    }\n}\n\nconst Profile = withRouter(UserInformation);\nexport {Profile};\n","import React from 'react';\nimport { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport axios from 'axios';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  // eslint-disable-next-line\n  Link, useRouteMatch, useParams\n} from \"react-router-dom\";\nimport { Container /*, Col, Row */ } from 'react-bootstrap';\n\nimport './App.css';\n// eslint-disable-next-line\nimport {DiscoverScreen} from './Discover.js';\nimport {SiteScreen, SiteCreation} from './Site.js';\nimport {RegisterScreen} from './Register.js';\nimport {Profile} from './Profile.js';\n\n//components imported\nimport {BoxPanel, NavBar,  /*, ResultSites */ } from './Components/components.js';\n\nimport { APIURL } from './apiurl.js';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {loginToken: '', user_id:''};\n        this.login = this.login.bind(this);\n        \n        \n    }\n    componentDidMount(){\n        const cookies = new Cookies();\n        //console.log(cookies.get('jwt'));\n        //console.log(cookies.get('user_id'));\n        if (cookies.get('jwt') && cookies.get('user_id') && cookies.get('name')){\n            this.setState({ loginToken: cookies.get('jwt'), user_id: cookies.get('user_id'), name: cookies.get('name') });\n        }\n        \n        \n    }\n    login(username, password)  {\n        console.log(\"logging in: \"+APIURL);\n    axios.put(\n            APIURL + 'user',\n            { 'name':username, 'password':password})\n            .then( response => {\n                if (!response['data']){\n                    alert(\"incorrect password, please try again\");\n                }\n                else if (response['data']['jwt'].length > 0){\n                    this.setState({'loginToken' : response['data']['jwt'],\n                                   'user_id':response['data']['id'] });\n                    const cookies = new Cookies();\n                    cookies.set('user_id', response['data']['id'], { path: '/', expires: new Date(Date.now()+3600000) });\n                    cookies.set('jwt', response['data']['jwt'], { path: '/', expires: new Date(Date.now()+3600000) });\n                    cookies.set('name', username, { path: '/', expires: new Date(Date.now()+3600000) });\n                    \n                    \n                }else{\n                    alert(\"username is incorrect, please try again\");\n                }                    \n        //store user's id and token into cookies\n        \n\t\t//console.log(response);\n\t    }).catch(\n            function (error) {\n              console.log('Show error notification!')\n              return Promise.reject(error)\n            }\n        );  // todo: add error-checking\n        \n        \n        \n    }\n    \n    render(){\n        \n    //<DiscoverScreen /> route guide\n\treturn (\n\t    <HashRouter>\n              <div className=\"App\">\n                <Banner login={ this.login } user_id={ this.state.user_id } />\n                \n\t\t<Switch>\n\t\t  <Route exact path=\"/\">\n\t\t    <p>this is the app</p>\n\t\t  </Route>\n                  \n\t\t  <Route path=\"/user/:user_id\">\n\t\t    <Profile />                   \n\t\t  </Route>\n          \n                  <Route exact path=\"/sites/:user_id\">\n                    <SiteCreation jwt={this.state.loginToken} />\n                  </Route>\n                  \n\t\t  <Route exact path=\"/site/:site_id\">\n\t\t    <SiteScreen user_id={ this.state.user_id } jwt={this.state.loginToken}  />\n\t\t  </Route>\n                  \n\t\t  <Route path=\"/register\">\n                    <RegisterScreen/>\n\t\t  </Route>\n                  \n                  <Route path=\"/discover\">\n                    <DiscoverScreen />\n                  </Route>\n                  \n                  <Route path=\"/user\">\n                    <p>Authorization Failed: You must be logged in to view your profile</p>\n                  </Route>\n\t\t</Switch>\n\t      </div>\n\t    </HashRouter>\n\t);\n    }\n}\n\nclass Banner extends Component {\n    constructor(props) {\n        super(props);\n        this.updateUsername = this.updateUsername.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n        this.callLogin = this.callLogin.bind(this);\n        this.gotoRegister = this.gotoRegister.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this);\n        this.state = { name:'', password:'', user_id:'', redirect: false, isLoggedIn: false };\n        \n        this.checkLogin = this.checkLogin.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n    \n    componentDidUpdate(){\n        //makes user_id the same as app (so if logged in on app, logged in on banner)\n        \n    }\n\n    gotoRegister(event) {\n        this.setState({redirect: true});\n    }\n\n    renderRedirect() {\n        return (\n            this.state.redirect ? <Redirect to='/register/'/> : ''\n        );\n    }\n    \n    updateUsername(event) {\n        this.setState({name: event.target.value});\n    }\n    \n    updatePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    callLogin(event) {\n        if (this.state.name !== 0 && this.state.password !== 0){\n            this.props.login(this.state.name, this.state.password);\n        }\n    }\n    checkLogin(){\n        const cookies = new Cookies();\n        \n        console.log(\"user_id:\"+this.props.user_id);\n        \n        if(cookies.get('name') && cookies.get('jwt') && cookies.get('user_id') && this.state.isLoggedIn === false) {\n            this.setState({user_id: this.props.user_id, isLoggedIn:true});\n            console.log('logged in successful');\n        }\n        \n        \n    }\n    logout(event){\n        const cookies = new Cookies();\n        cookies.remove('name')\n        cookies.remove('jwt')\n        cookies.remove('user_id')\n        this.setState({isLoggedIn: false});\n        \n    }\n    render() {\n        // todo: make a conditional render to just show \"logged in\" when logged in\n        // todo: add a register button\n        const cookies = new Cookies();\n        //console.log(\"cookies\"+cookies.get('name')+cookies.get('jwt')+cookies.get('user_id'));\n        if (this.state.user_id === ''){\n            console.log(\"logging in right now\");\n            setInterval(this.checkLogin, 1000 );\n            //this.checkLogin();\n            //this.render()\n        }\n        \n        return (          \n            <div className=\"App-banner\">\n              <div className='App-title'>\n                <Container fluid>                  \n                  <BoxPanel>\n                    Nathan's World\n                  </BoxPanel>\n                                    \n                  <BoxPanel>\n                    { !this.state.isLoggedIn ? \n                      <div>\n                        {this.renderRedirect()}\n                        <form>\n                          username<input type=\"text\" value={this.state.name}\n                                         onChange={this.updateUsername}/>\n                          <br/>\n                          password<input type=\"password\" name=\"password\" value={this.state.password}\n                                         onChange={this.updatePassword}/>\n                          <br/>\n                          <button type='button' onClick={this.callLogin} \n                                  name='loginButton'>LOGIN</button>\n                          <button type='button' onClick={this.gotoRegister}\n                                  name='registerButton'>Register</button>\n                        </form>\n                      </div> \n                      \n                      : \n                      \n                      <div>\n                      <p>Logged in as: {cookies.get('name')}</p>\n                      <button type='button' onClick={this.logout}>LOGOUT</button>\n                      </div>\n                    }\n                  </BoxPanel>\n                  \n                  <NavBar user_id = {this.props.user_id} />\n                  \n                </Container>\n              </div>\n           </div>\n            \n        );\n    }\n}\n\nexport default App;\n//export Banner, RegistrationScreen; Why does banner not work even when its exported?\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}