daemon off;
worker_processes auto;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
    multi_accept on;
}

http {
    server_tokens off;
    gzip on;
    gzip_min_length 512;
    
    log_format 12met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> 12met;
    error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;
    
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    
    #Must read the body in 5 seconds.
    client_body_timeout 5;
    client_max_body_size 5M;
    
    upstream app_server {
        server unix:/tmp/nginx.socket fail_timeout=0;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;
        keepalive_timeout 5;
        
        # server the client (static) files
        location / {
            root /app/react-diskanet/build/;
            index index.html;
        }
        
        #serve the api
        location /api/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
}

